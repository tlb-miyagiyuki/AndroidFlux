apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

targetCompatibility = JavaVersion.VERSION_1_7
sourceCompatibility = JavaVersion.VERSION_1_7

dependencies {
  compile project(':flux-framework')
  compile "com.google.auto.service:auto-service:${auto_service_version}"
  compile "com.squareup:javapoet:${javapoet_version}"
  compile "io.reactivex:rxjava:${rxjava_version}"

  testCompile 'junit:junit:4.12'
  testCompile files(org.gradle.internal.jvm.Jvm.current().getToolsJar())
  testCompile 'com.google.testing.compile:compile-testing:0.8'
  testCompile 'com.google.truth:truth:0.28'
}


// covarage report
jacoco {
  toolVersion = "0.7.1.201405082137"
  reportsDir = file("$buildDir/reports")
}

jacocoTestReport {
  reports {
    xml.enabled = true
    html.enabled = true
    xml.destination = "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
  }
}

check.dependsOn jacocoTestReport

coveralls {
  sourceDirs = files(sourceSets.main.allSource.srcDirs).files.absolutePath
}

// upload jar
task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

task javadocJar(type: Jar) {
  from javadoc
  classifier = 'javadoc'
}

sourceSets {
  main {
    java {
      srcDirs = ['src/main/java']
    }
  }
  test {
    java {
      srcDirs = ['src/test/java']
    }
  }
}

publishing {
  publications {
    maven(MavenPublication) {
      from components.java
      groupId 'jp.bglb.bonboru'
      artifact sourcesJar
      artifact javadocJar
    }
  }
}

bintray {
  Properties properties = new Properties()
  def property = new File('local.properties')
  if (property.exists()) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    user = properties.getProperty('bintray_user')
    key = properties.getProperty('bintray_api_key')
  }
  user = System.getenv('bintray_user') ?: user
  key = System.getenv('bintray_api_key') ?: key
  publications = ['maven']

  pkg {
    repo = 'maven'
    name = "jp.bglb.bonboru:${project.name}"
    version.name = project.version
  }
}
